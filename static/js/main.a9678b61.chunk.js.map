{"version":3,"sources":["assets/logo.png","config.js","assets/register.png","components/NavBar/NavBar.js","components/JobCard/JobCard.js","utils/apiService.js","components/JobContainer/JobContainer.js","components/Filter/Filter.js","components/Dashboard/Dashboard.js","components/Login/Login.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BASE_URL","NavBar","state","isLoggedIn","handleLogout","e","preventDefault","cookie","remove","_this","setState","window","location","reload","undefined","load","this","react_default","a","createElement","className","style","fontWeight","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","width","onClick","react_router_dom","to","Component","JobCard","title","organisation","stipend","_this$props$value","props","value","margin","name","getInternships","concat","registerUser","loginUser","JobContainer","internships","_this2","axios","get","then","res","data","catch","err","console","log","map","internship","components_JobCard_JobCard","key","_id","Filter","src","logo","position","right","top","alt","border","Dashboard","history","push","components_NavBar_NavBar","components_Filter_Filter","components_JobContainer_JobContainer","Login","email","password","handleChange","Object","defineProperty","target","handleSubmit","_this$state","swal","post","message","expires","Date","setDate","now","save","token","path","float","fontSize","onSubmit","placeholder","onChange","register","role","redirect","App","react_router","exact","component","Register","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9678b61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.92c4baae.png\";","const BASE_URL = \"http://localhost:3001/api/\";\n\nmodule.exports = { BASE_URL };\n","module.exports = __webpack_public_path__ + \"static/media/register.8b444a5f.png\";","import React, { Component } from 'react';\nimport cookie from 'react-cookies';\nimport {Link} from 'react-router-dom';\n\nclass NavBar extends Component {\n\n  state = {\n    isLoggedIn: false\n  }\n\n  handleLogout = (e) => {\n    e.preventDefault();\n    cookie.remove('token');\n    this.setState({isLoggedIn: false});\n    window.location.reload();\n  }\n\n  componentDidMount() {\n    if(cookie.load('token') !== undefined) this.setState({isLoggedIn: true});\n  }\n\n  render(){\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"container\">\n              <a className=\"navbar-brand\" style={{ fontWeight: 700 }} href={'/'}>interndash</a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                  aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                  <i className=\"fa fa-bars\"></i>\n              </button>\n\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                  <ul className=\"navbar-nav mr-auto nav justify-content-end custom_nav\" style={{ width: '100%' }}>\n                      <li className=\"nav-item\">\n                          {this.state.isLoggedIn === true ? <a className=\"nav-link active\" href={'/'}>Dashboard</a>: <span></span>}\n                      </li>\n                      <li className=\"nav-item\">\n                          {this.state.isLoggedIn === true ? <a className=\"nav-link\" href={'/'}>Profile</a> : <span></span>}\n                      </li>\n                      <li className=\"nav-item\">\n                          {this.state.isLoggedIn === true ? <a href={\"/\"} className=\"nav-link\" onClick={this.handleLogout}>Sign out</a> : <Link to=\"/login\" className=\"nav-link\" >Sign In</Link>}\n                      </li>\n                  </ul>\n              </div>\n          </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport './JobCard.css';\nimport cookie from 'react-cookies';\n\nclass JobCard extends Component {\n\n  state = {\n    title: '',\n    organisation: {},\n    stipend: '',\n    location: '',\n    isLoggedIn: false\n  }\n\n  componentDidMount() {\n    const { title, location, organisation, stipend } = this.props.value;\n    const token = cookie.load('token');\n    let isLoggedIn = false;\n    if(token !== undefined) {\n      isLoggedIn = true;\n    }\n    this.setState({\n      title, location, organisation, stipend, isLoggedIn\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"col-lg-4 mb-4\">\n        <div className=\"card internship-box p-2\">\n            {this.state.isLoggedIn === true ? <span className=\"applyBtn\">Apply</span> : <span></span>}\n            <h6>{this.state.title}</h6>\n            <p style={{ margin: 0 }}><b>{this.state.organisation.name}</b>\n            <br/>\n            {this.state.location}\n            <br/>INR {this.state.stipend}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JobCard;\n","import {BASE_URL} from '../config';\n\nexport const getInternships = `${BASE_URL}internships`;\nexport const registerUser = `${BASE_URL}auth/register`;\nexport const loginUser = `${BASE_URL}auth/login`;\nexport const postInternship = `${BASE_URL}internships`;\nexport const createOrganisation = `${BASE_URL}organisations`;\n","import React, { Component } from 'react';\nimport JobCard from '../JobCard/JobCard';\nimport axios from 'axios';\nimport {getInternships} from '../../utils/apiService';\n\nclass JobContainer extends Component {\n\n  state = {\n    internships: []\n  }\n\n  componentDidMount() {\n      axios.get(getInternships)\n        .then(res => {\n          this.setState({internships: res.data.internships});\n        })\n        .catch(err => {\n          console.log(err);\n        });\n  }\n\n  render() {\n    return (\n      <div className=\"col-lg-9 mb-4\">\n        <div className=\"row\">\n          { this.state.internships.map(internship => <JobCard key={internship._id} value={internship}/>) }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JobContainer;\n","import React, {Component} from 'react';\nimport logo from '../../assets/logo.png';\n\nclass Filter extends Component {\n  render() {\n    return (<div className=\"col-lg-3 mb-4\">\n      <div className=\"card source_card p-4\">\n        <h5>Source<img src={logo} width=\"15%\" style={{position: 'absolute', right: 20, top: 16}} alt=\"\"></img></h5>\n        <hr/>\n        <form>\n          <div className=\"form-check\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\"/>\n            <label className=\"form-check-label\">\n              Internshala\n            </label>\n          </div>\n\n          <div className=\"form-check\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\"/>\n            <label className=\"form-check-label\">\n              AngelList\n            </label>\n          </div>\n\n          <div className=\"form-check\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\"/>\n            <label className=\"form-check-label\">\n              Linkedin\n            </label>\n          </div>\n\n          <button className=\"mt-4 col-12 pt-1 pb-1 btn btn-outline-dark\" style={{\n              fontWeight: 700,\n              border: '3px solid #666666'\n            }}>\n            Apply Filter\n          </button>\n        </form>\n      </div>\n\n    </div>);\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport NavBar from '../NavBar/NavBar';\n// import StipendCalculator from '../StipendCalculator/StipendCalculator';\n// import Preferences from '../Preferences/Preferences';\nimport JobContainer from '../JobContainer/JobContainer';\nimport Filter from '../Filter/Filter';\nimport cookie from 'react-cookies';\n// import axios from 'axios';\n// import {getInternships} from '../../utils/apiService';\n\nclass Dashboard extends Component {\n\n  componentDidMount() {\n    const token = cookie.load('token');\n    if(token === undefined) {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <NavBar/>\n\n        <div className=\"mt-4\">\n          <div className=\"row\">\n            <Filter/>\n            <JobContainer/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport logo from '../../assets/logo.png';\nimport swal from 'sweetalert';\nimport {loginUser} from '../../utils/apiService';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport register from '../../assets/register.png';\n\nclass Login extends Component {\n\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    if(email === '' || email === undefined || email === null) return swal(\"Please enter your email\", \"\", \"warning\");\n    if(password === '' || password === undefined || password === null) return swal(\"Please enter your password\", \"\", \"warning\");\n\n    const data = {email, password};\n    axios.post(loginUser, data)\n      .then(res => {\n        if(res.data.message === 'success'){\n          const expires = new Date()\n          expires.setDate(Date.now() + 1000 * 60 * 60 * 24 * 14);\n          cookie.save('token', res.data.token, { path: '/', expires });\n          swal(\"LoggedIn Successfully\", \"\", \"success\");\n          this.props.history.push(\"/\");\n        }\n        if(res.data.message === 'incorrect password'){\n          swal(res.data.message, \"\", \"warning\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    const token = cookie.load('token');\n    if(token !== undefined) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"mt-4 mb-5 container\">\n        <div className=\"card mt-5\">\n            <div className=\"row\">\n                <div className=\"col-lg-5 p-5 mt-2\">\n                    <img className=\"logo\" src={logo} style={{width:\"30%\", float: 'right'}} alt=\"\"></img>\n                    <h4>Login</h4>\n                    <p style={{ fontSize: '16px' }}>To grab an internship that matches your profile.</p>\n                    <br/>\n\n                    <form onSubmit={this.handleSubmit}>\n                      <label className=\"form-check-label\">\n                        Email\n                      </label>\n                      <input className=\"form-control mt-2\" placeholder=\"Enter your email\" name=\"email\" onChange={this.handleChange} type=\"email\"/>\n\n                      <br/>\n\n                      <label className=\"form-check-label\">\n                        Password\n                      </label>\n                      <input className=\"form-control mt-2\" placeholder=\"Enter your password\" name=\"password\" onChange={this.handleChange} type=\"password\"/>\n\n                      <br/>\n\n                      <button type=\"submit\" className=\"gbutton btn\">Login</button>\n\n                    </form>\n\n                </div>\n                <div className=\"col-lg-7\">\n                    <img className=\"front_image\" src={register} width=\"100%\" alt=\"\"/>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"mt-5\">\n            <div className=\"row\">\n                <div className=\"col-lg-2\"></div>\n                <div className=\"col-lg-4\">\n                    <img src=\"https://images.pexels.com/photos/450271/pexels-photo-450271.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" width=\"100%\" alt=\"\" className=\"image_classic\"/>\n                </div>\n                <div className=\"col-lg-4 pt-4\">\n                    <p style={{ fontSize: '20px' }} className=\"p_classic\">\" Be a yardstick of quality. Some people aren't used to an environment where excellence is expected. \"\n                        <br/><br/>\n                        - Sir Steve Jobs\n                    </p>\n                </div>\n                <div className=\"col-lg-2\"></div>\n\n            </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport logo from '../../assets/logo.png';\nimport register from '../../assets/register.png';\nimport swal from 'sweetalert';\nimport {registerUser} from '../../utils/apiService';\nimport axios from 'axios';\n\nclass Login extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    role: '',\n    redirect: false\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, email, password, role } = this.state;\n\n    if(email === '' || email === undefined || email === null) return swal(\"Please enter your email\", \"\", \"warning\");\n    if(password === '' || password === undefined || password === null) return swal(\"Please enter your password\", \"\", \"warning\");\n    if(name === '' || name === undefined || name === null) return swal(\"Please enter your name\", \"\", \"warning\");\n    if(role === '' || role === undefined || role === null) return swal(\"Please select your role\", \"\", \"warning\");\n\n    const data = { name, email, password, role };\n\n    axios.post(registerUser, data)\n      .then(res => {\n        console.log(res.data.message);\n        if(res.data.message === 'success'){\n          swal(\"Registered Successfully\", \"\", \"success\");\n          this.props.history.push('/');\n        }\n        if(res.data.message === 'user already registered.'){\n          swal(\"User already exists\", \"\", \"warning\");\n        }\n      })\n      .catch(err => {\n        if(err.message === 'error') {\n          swal(\"Something went wrong\", \"\", \"error\");\n        }\n      });\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"mt-5 mb-5 container\">\n        <div className=\"card mt-5\">\n            <div className=\"row\">\n                <div className=\"col-lg-7\">\n                    <img className=\"front_image_register\" src={register} width=\"100%\" alt=\"\"/>\n                </div>\n                <div className=\"col-lg-5 p-5\">\n                    <img className=\"logo\" src={logo} style={{width:\"30%\", float: 'right'}} alt=\"\"></img>\n                    <h4>Register</h4>\n                    <p style={{ fontSize: '16px' }}>To grab an internship that matches your profile.</p>\n                    <br/>\n\n                    <form onSubmit={this.handleSubmit}>\n                      <label className=\"form-check-label\">\n                        Name\n                      </label>\n                      <input className=\"form-control mt-2\" placeholder=\"Enter your full name\" onChange={this.handleChange} name=\"name\" type=\"text\"/>\n\n                      <br/>\n\n                      <label className=\"form-check-label\">\n                        Email\n                      </label>\n                      <input className=\"form-control mt-2\" placeholder=\"Enter your email\" name=\"email\" type=\"email\" onChange={this.handleChange}/>\n\n                      <br/>\n\n                      <label className=\"form-check-label\">\n                        Password\n                      </label>\n                      <input className=\"form-control mt-2\" placeholder=\"Enter your password\" name=\"password\" type=\"password\" onChange={this.handleChange}/>\n\n                      <br/>\n\n                      <label className=\"radio-inline\"><input type=\"radio\" name=\"role\" onChange={this.handleChange} value=\"mentor\"/> Recruiter</label>\n                      <label className=\"radio-inline ml-3\"><input type=\"radio\" name=\"role\" onChange={this.handleChange} value=\"intern\"/> Intern</label>\n\n                      <br/>\n\n                      <button type=\"submit\" className=\"gbutton_reg btn\">Register</button>\n                    </form>\n\n                </div>\n\n            </div>\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import NavBar from './components/NavBar/NavBar';\n// import JobCard from './components/JobCard/JobCard';\n// import Filter from './components/Filter/Filter';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={Dashboard}\n          />\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/register\" component={Register}/>\n\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}